{"title":"中间件-nginx","slug":"中间件-nginx","date":"2018-11-07T02:01:00.000Z","updated":"2018-11-07T07:22:06.911Z","comments":true,"path":"api/articles/中间件-nginx.json","photos":[],"link":"","excerpt":null,"covers":["https://bj.bcebos.com/v1/image-langke/hexo-neirongpeitu/中间件/Nginx_p.png","https://bj.bcebos.com/v1/image-langke/hexo-neirongpeitu/中间件/Nginx_peizhi.png","https://bj.bcebos.com/v1/image-langke/hexo-neirongpeitu/中间件/peizhi_cuowu.png"],"content":"<h1 id=\"Nginx\"><a href=\"#Nginx\" class=\"headerlink\" title=\"Nginx\"></a>Nginx</h1><pre><code>这次主要来深入了解一下中间件，包括简介，下载，安装，配置，常见风险，安全加固等。\n</code></pre><h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><blockquote>\n<p><strong>Nginx:</strong>是一个异步框架的Web服务器，也可以用作反向代理，<br>负载平衡和 HTTP缓存。该软件由Igor Sysoev创建，并于2004年首次公开发布。<br>同名公司成立于2011年，以提供支持。<br>Nginx是一款免费的开源软件，根据类BSD许可证的条款发布。<br>一大部分Web服务器使用Nginx，通常作为负载均衡器。</p>\n</blockquote>\n<!-- nore -->\n<p><img src=\"https://bj.bcebos.com/v1/image-langke/hexo-neirongpeitu/中间件/Nginx_p.png\" alt=\"\"></p>\n<h3 id=\"下载、安装\"><a href=\"#下载、安装\" class=\"headerlink\" title=\"下载、安装\"></a>下载、安装</h3><p><strong>Linux</strong></p>\n<blockquote>\n<p>添加Atomic源<br><code>wget http://www.atomicorp.com/installers/atomic</code><br><code>sh ./stomic</code>  //安装各种依赖<br><code>yum check-update</code><br>安装、启动<br><code>yum install nginx</code><br><code>service nginx start</code><br><code>chkconfig --levels 235 nginx on</code>设置2，3，5级别启动<br>设置防火墙<br><code>firewall-cmd --zone=public --add-port=80/tcp --permanent</code><br>添加80端口，–permanent永久生效，没有此参数重启失效。<br>还可以批量添加：<br><code>firewall-cmd --zone=public --add-port=1000-2000/tcp --permanent</code><br><code>firewall-cmd --reload</code>重启<br>此时即可在其他主机正常访问了。</p>\n</blockquote>\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><blockquote>\n<p>查找配置文件位置<br>方法一：<br><code>updatedb</code><br><code>locate nginx.conf</code><br>方法二：<br><code>pa aux | grep nginx</code></p>\n</blockquote>\n<p>nginx配置文件更改<br><img src=\"https://bj.bcebos.com/v1/image-langke/hexo-neirongpeitu/中间件/Nginx_peizhi.png\" alt=\"\"><br>php配置<br><img src=\"https://bj.bcebos.com/v1/image-langke/hexo-neirongpeitu/中间件/php_peizhi.png\" alt=\"\"><br>然后重启服务<br>service nginx restart<br>service php-fpm restart</p>\n<h3 id=\"常见风险\"><a href=\"#常见风险\" class=\"headerlink\" title=\"常见风险\"></a>常见风险</h3><h5 id=\"Nginx文件类型错误解析漏洞\"><a href=\"#Nginx文件类型错误解析漏洞\" class=\"headerlink\" title=\"Nginx文件类型错误解析漏洞*\"></a><strong>Nginx文件类型错误解析漏洞*</strong></h5><blockquote>\n<p>漏洞分析<br>比如： <a href=\"http://192.168.1.100/shell.jpg/1.php\" target=\"_blank\" rel=\"noopener\">http://192.168.1.100/shell.jpg/1.php</a><br>会把包含木马代码的shell.jpg图像文件当作.php文件来解析，从而使攻击者获得一个webshell。</p>\n</blockquote>\n<blockquote>\n<p>修复方案</p>\n<ul>\n<li>修改<code>php.ini</code>文件，将cgi.fix_pathinfo的值设置为0</li>\n<li>在Nginx配置文件中添加以下代码：<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> ($fastcgi_script_name ~\\..*\\/.*php)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">403</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</blockquote>\n<p>这行代码的意思是当匹配到类似test.jpg/a.php的URL时，将返回403错误代码。</p>\n<h5 id=\"Nginx配置错误而导致目录遍历漏洞\"><a href=\"#Nginx配置错误而导致目录遍历漏洞\" class=\"headerlink\" title=\"Nginx配置错误而导致目录遍历漏洞\"></a><strong>Nginx配置错误而导致目录遍历漏洞</strong></h5><blockquote>\n<p>漏洞分析<br>当Nginx的配置文件中开启了autoindex选项，下面这种配置就会导致目录遍历。<br><img src=\"https://bj.bcebos.com/v1/image-langke/hexo-neirongpeitu/中间件/peizhi_cuowu.png\" alt=\"\"><br>下面时演示：<br><img src=\"https://bj.bcebos.com/v1/image-langke/hexo-neirongpeitu/中间件/bianli_.png\" alt=\"\"><br>修复方案<br>把配置文件改成下面其中的一种<br><img src=\"https://bj.bcebos.com/v1/image-langke/hexo-neirongpeitu/中间件/xiufu_.png\" alt=\"\"></p>\n</blockquote>\n<h3 id=\"安全加固\"><a href=\"#安全加固\" class=\"headerlink\" title=\"安全加固\"></a>安全加固</h3><blockquote>\n<p>针对Nginx的安全加固主要有两点：</p>\n<ul>\n<li>一、使用的版本是否存在安全漏洞。<br>一般选择最新的稳定版本，在升级Nginx版本钱建议现在测试环境测试通过后<br>再正式升级，以避免各种兼容性问题</li>\n<li>二、配置是否得当，是否存在由于配置失误导致的安全问题。</li>\n</ul>\n<ol>\n<li>修改/隐藏Nginx Banner信息，文件 /src/core/nginx.h</li>\n<li>修改Nginx日志的默认位置和权限</li>\n<li>以低权限的身份运行Nginx服务，并修改配置文件Nginx.conf，<br>遵循写入权限和执行权限不能给同一个目录。</li>\n</ol>\n</blockquote>\n<h4 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h4><pre><code>本篇文章会不定期更新，可能会根据作者知识的增长，可能会根据版本的升级。 \n</code></pre>","categories":[],"tags":[{"name":"中间件","slug":"中间件","count":2,"path":"api/tags/中间件.json"}]}