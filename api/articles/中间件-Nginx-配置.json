{"title":"中间件-Nginx-配置","slug":"中间件-Nginx-配置","date":"2018-11-08T01:06:37.000Z","updated":"2018-11-09T08:11:40.265Z","comments":true,"path":"api/articles/中间件-Nginx-配置.json","photos":[],"link":"","excerpt":"首先说明这些总结来自网络。本来准备在上一篇总结完的，无奈篇幅太大，只能单独写一篇了。后续可能还会添加，在此基础上。Nginx配置X-Frame-Options该响应头用于是否允许浏览器加载 frame、iframe、object 等属性。<br>可以使用该功能来避免点击劫持<br>add_header X-Frame-Options SAMEORIGIN;","covers":null,"content":"<pre><code>首先说明这些总结来自网络。\n本来准备在上一篇总结完的，无奈篇幅太大，只能单独写一篇了。\n后续可能还会添加，在此基础上。\n</code></pre><h1 id=\"Nginx配置\"><a href=\"#Nginx配置\" class=\"headerlink\" title=\"Nginx配置\"></a>Nginx配置</h1><h4 id=\"X-Frame-Options\"><a href=\"#X-Frame-Options\" class=\"headerlink\" title=\"X-Frame-Options\"></a><strong>X-Frame-Options</strong></h4><blockquote>\n<p>该响应头用于是否允许浏览器加载 frame、iframe、object 等属性。<br>可以使用该功能来避免点击劫持<br>add_header X-Frame-Options SAMEORIGIN;</p>\n</blockquote>\n<a id=\"more\"></a>\n<p>该指令有三个可用的配置</p>\n<ul>\n<li>X-Frame-Options: DENY            # 禁止任何页面被嵌入</li>\n<li>X-Frame-Options: SAMEORIGIN      # 只允许加载同源的 frame等</li>\n<li>X-Frame-Options: ALLOW-FROM <a href=\"http://example.com\" target=\"_blank\" rel=\"noopener\">http://example.com</a>  # 只允许加载指定的<h4 id=\"X-Content-Type-Options\"><a href=\"#X-Content-Type-Options\" class=\"headerlink\" title=\"X-Content-Type-Options\"></a><strong>X-Content-Type-Options</strong></h4><blockquote>\n<p>用来关闭资源响应类型的猜测，参数只能是nosniff[关闭]<br>add_header X-Content-Type-Options nosniff;</p>\n</blockquote>\n<h4 id=\"X-XSS-Protection\"><a href=\"#X-XSS-Protection\" class=\"headerlink\" title=\"X-XSS-Protection\"></a><strong>X-XSS-Protection</strong></h4><blockquote>\n<p>用于防范及过滤XSS，理论上是这样，但是很多案例表明开启此响应头会更危险。<br>所以，最好的选择是禁用此头，默认配置是 1 。<a href=\"https://blog.innerht.ml/the-misunderstood-x-xss-protection/\" target=\"_blank\" rel=\"noopener\">具体案例参考</a><br>add_header X-XSS-Protection “1; mode=block”;<br>可用的几个指令：</p>\n</blockquote>\n</li>\n<li>X-XSS-Protection: 0               # 禁用 XSS 过滤</li>\n<li>X-XSS-Protection: 1               # 开启 XSS 过滤</li>\n<li>X-XSS-Protection: 1;mode=block    # 开启 XSS 过滤，并且若检查到 XSS 攻击，停止渲染页面。</li>\n<li>X-XSS-Protection: 1;report=<reporting-uri>  # 若检查到XSS攻击，将使用指导的url来发送报告。<h4 id=\"Content-Security-Policy\"><a href=\"#Content-Security-Policy\" class=\"headerlink\" title=\"Content-Security-Policy\"></a><strong>Content-Security-Policy</strong></h4><blockquote>\n<p><em>内容同源策略（csp）</em>这个头比上面那个要强大很多，主要用来规定页面可以加载哪些资源。<br><a href=\"https://www.jianshu.com/p/cb4a6dbc5122\" target=\"_blank\" rel=\"noopener\">更加具体的介绍</a><br>add_header Content-Security-Policy: default-src ‘self’; script-src evil.com</p>\n</blockquote>\n<h4 id=\"Strict-Transport-Security\"><a href=\"#Strict-Transport-Security\" class=\"headerlink\" title=\"Strict-Transport-Security\"></a><strong>Strict-Transport-Security</strong></h4><blockquote>\n<p><em>严格传输安全（HSTS）</em>用于标识浏览器用HTTPS代替HTTP的方式去访问目标站点。<br>由于用户主动输入地址等可能导致以HTTP访问网站，降低了安全性。<br>add_header strict-transport-security: max-age=16070400; includeSubDomains;</p>\n</blockquote>\n<h1 id=\"在接下来的-16070400-秒内，强制使用HTTPS的方式访问。\"><a href=\"#在接下来的-16070400-秒内，强制使用HTTPS的方式访问。\" class=\"headerlink\" title=\"在接下来的 16070400 秒内，强制使用HTTPS的方式访问。\"></a>在接下来的 16070400 秒内，强制使用HTTPS的方式访问。</h1><h1 id=\"参数-includeSubDomains-可选。-限定所有子域名采用HSTS规则\"><a href=\"#参数-includeSubDomains-可选。-限定所有子域名采用HSTS规则\" class=\"headerlink\" title=\"参数 includeSubDomains 可选。 限定所有子域名采用HSTS规则\"></a>参数 includeSubDomains 可选。 限定所有子域名采用HSTS规则</h1></reporting-uri></li>\n</ul>\n<h4 id=\"uri\"><a href=\"#uri\" class=\"headerlink\" title=\"$uri\"></a><strong>$uri</strong></h4><blockquote>\n<p>这个变量一般用在302跳转的时候。<br>比如：一、http跳到https。二、统一用户访问的域名，有益SEO优化。<br>有三个标识uri的变量：</p>\n<ul>\n<li>1.$uri</li>\n<li>2.$document_uri</li>\n<li>3.$request_uri<br>1和2表示的是解码以后的请求路径，不带参数；<br>3表示的是完整的URI（没有解码）。<br>如果配置下面这样，就存在漏洞了.<a href=\"https://www.leavesongs.com/PENETRATION/Sina-CRLF-Injection.html\" target=\"_blank\" rel=\"noopener\">参考</a><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location / &#123;</span><br><span class=\"line\">    return 302 https://$host$uri;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</blockquote>\n<p>正确做法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location / &#123;</span><br><span class=\"line\">    return 302 https://$host$request_uri;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><a href=\"https://www.cnblogs.com/chenpingzhao/p/5785416.html\" target=\"_blank\" rel=\"noopener\">特别详细的参考</a></p>\n","categories":[],"tags":[{"name":"nginx","slug":"nginx","count":2,"path":"api/tags/nginx.json"}]}