{"title":"常见中间件及漏洞发现与修复","slug":"常见中间件及漏洞发现与修复","date":"2018-11-06T06:00:29.000Z","updated":"2018-11-07T01:15:01.183Z","comments":true,"path":"api/articles/常见中间件及漏洞发现与修复.json","photos":[],"link":"","excerpt":"常见中间件及漏洞发现与修复开始之前先来了解几个概念： 中间件中间件是一种独立的系统软件或服务程序，分布式应用软件借助这种软件在不同的技术之间共享资源。（中间件是包括下面几种的）<br>web服务器","covers":["https://bj.bcebos.com/v1/image-langke/hexo-neirongpeitu/中间件/旧房子.png","https://bj.bcebos.com/v1/image-langke/hexo-neirongpeitu/中间件/peizhi_cuowu.png"],"content":"<h1 id=\"常见中间件及漏洞发现与修复\"><a href=\"#常见中间件及漏洞发现与修复\" class=\"headerlink\" title=\"常见中间件及漏洞发现与修复\"></a>常见中间件及漏洞发现与修复</h1><blockquote>\n<p>开始之前先来了解几个概念： </p>\n<blockquote>\n<p>中间件</p>\n<ul>\n<li>中间件是一种独立的系统软件或服务程序，分布式应用软件借助这种软件在不同的技术之间共享资源。（中间件是包括下面几种的）<br>web服务器</li>\n</ul>\n</blockquote>\n</blockquote>\n<a id=\"more\"></a>\n<p><img src=\"https://bj.bcebos.com/v1/image-langke/hexo-neirongpeitu/中间件/旧房子.png\" alt=\"\"></p>\n<ul>\n<li>Web服务器一般指网站服务器，是指驻留于因特网上某种类型计算机的程序，可以向浏览器等Web客户端提供文档，也可以放置网站文件，让全世界浏览；可以放置数据文件，让全世界下载。<blockquote>\n<blockquote>\n<p>web容器</p>\n</blockquote>\n</blockquote>\n</li>\n<li>web容器是一种服务程序，在服务器一个端口就有一个提供相应服务的程序，而这个程序就是处理从客户端发出的请求，如JAVA中的Tomcat容器，ASP的IIS或PWS都是这样的容器。一个服务器可以有多个容器。<blockquote>\n<blockquote>\n<p>数据库</p>\n</blockquote>\n</blockquote>\n</li>\n<li>简而言之可视为电子化的文件柜——存储电子文件的处所，用户可以对文件中的数据运行新增、截取、更新、删除等操作。</li>\n</ul>\n<h2 id=\"web服务器\"><a href=\"#web服务器\" class=\"headerlink\" title=\"web服务器\"></a>web服务器</h2><blockquote>\n<p>web服务器主要有：IIS,WebSphere,WebLogic,Apache,Tomcat,Jboss,Nginx</p>\n</blockquote>\n<h3 id=\"Nginx\"><a href=\"#Nginx\" class=\"headerlink\" title=\"Nginx\"></a>Nginx</h3><p><strong><em>Nginx文件类型错误解析漏洞</em></strong></p>\n<blockquote>\n<p>漏洞分析<br>比如： <a href=\"http://192.168.1.100/shell.jpg/1.php\" target=\"_blank\" rel=\"noopener\">http://192.168.1.100/shell.jpg/1.php</a><br>会把包含木马代码的shell.jpg图像文件当作.php文件来解析，从而使攻击者获得一个webshell。</p>\n</blockquote>\n<blockquote>\n<p>修复方案</p>\n<ul>\n<li>修改<code>php.ini</code>文件，将cgi.fix_pathinfo的值设置为0</li>\n<li>在Nginx配置文件中添加以下代码：<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> ($fastcgi_script_name ~\\..*\\/.*php)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">403</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</blockquote>\n<p>这行代码的意思是当匹配到类似test.jpg/a.php的URL时，将返回403错误代码。</p>\n<p><strong>Nginx配置错误而导致目录遍历漏洞</strong></p>\n<blockquote>\n<p>漏洞分析<br>当Nginx的配置文件中开启了autoindex选项，下面这种配置就会导致目录遍历。<br><img src=\"https://bj.bcebos.com/v1/image-langke/hexo-neirongpeitu/中间件/peizhi_cuowu.png\" alt=\"\"><br>下面时演示：<br><img src=\"https://bj.bcebos.com/v1/image-langke/hexo-neirongpeitu/中间件/bianli_.png\" alt=\"\"><br>修复方案<br>把配置文件改成下面其中的一种<br><img src=\"https://bj.bcebos.com/v1/image-langke/hexo-neirongpeitu/中间件/xiufu_.png\" alt=\"\"></p>\n</blockquote>\n<p><strong>Nginx安全加固</strong></p>\n<blockquote>\n<p>针对Nginx的安全加固主要有两点：</p>\n<ul>\n<li>一、使用的版本是否存在安全漏洞。<br>一般选择最新的稳定版本，在升级Nginx版本钱建议现在测试环境测试通过后<br>再正式升级，以避免各种兼容性问题</li>\n<li>二、配置是否得当，是否存在由于配置失误导致的安全问题。</li>\n</ul>\n<ol>\n<li>修改/隐藏Nginx Banner信息，文件 /src/core/nginx.h</li>\n<li>修改Nginx日志的默认位置和权限</li>\n<li>以低权限的身份运行Nginx服务，并修改配置文件Nginx.conf，<br>遵循写入权限和执行权限不能给同一个目录。</li>\n</ol>\n</blockquote>\n<h3 id=\"IIS\"><a href=\"#IIS\" class=\"headerlink\" title=\"IIS\"></a>IIS</h3><p> 解析漏洞<br>1.IIS 5.x/6.0解析漏洞</p>\n<p>a) 目录解析</p>\n<p>/xx.asp/xx.jpg</p>\n<p>b) 文件解析</p>\n<p>xx.asp;.jpg</p>\n<p>还有IIS6.0 默认的可执行文件除了asp还包含这三种</p>\n<p>/shell.asa</p>\n<p>/shell.cer</p>\n<p>/shell.cdx</p>\n<ol start=\"2\">\n<li>IIS 7.0/IIS 7.5/ Nginx &lt;8.03畸形解析漏洞</li>\n</ol>\n<p>在默认Fast-CGI开启状况下,上传一个名字为test.jpg，内容为</p>\n<p>&lt;?PHP fputs(fopen(‘shell.php’,’w’),’&lt;?php eval($_POST[cmd])?&gt;’);?&gt;</p>\n<p>的文件，然后访问test.jpg/.php,在这个目录下就会生成一句话木马 shell.php</p>\n<h3 id=\"Apache\"><a href=\"#Apache\" class=\"headerlink\" title=\"Apache\"></a>Apache</h3><ol>\n<li>Apache解析漏洞</li>\n</ol>\n<p>Apache 是从右到左开始判断解析,如果为不可识别解析,就再往左判断.</p>\n<p>比如 shell.php.a.rar “.a”和”.rar” 这两种后缀是apache不可识别解析,apache就会把shell.php.a.rar解析成php</p>\n<h4 id=\"后话\"><a href=\"#后话\" class=\"headerlink\" title=\"后话\"></a>后话</h4><p>几篇比较全面的参考</p>\n<ul>\n<li>IIS <code>https://www.freebuf.com/column/145287.html</code></li>\n<li>NGINX<code>https://www.freebuf.com/column/144825.html</code></li>\n<li>Tomcat<code>https://www.freebuf.com/column/146169.html</code></li>\n</ul>\n","categories":[],"tags":[{"name":"中间件","slug":"中间件","count":3,"path":"api/tags/中间件.json"}]}